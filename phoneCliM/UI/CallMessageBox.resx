<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAASUVORK5CYII=
</value>
  </data>
</root>